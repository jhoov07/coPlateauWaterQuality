AsTrain$As3Cat <- as.factor(AsTrain$As3Cat)
AsTest$As3Cat <- as.factor(AsTest$As3Cat)
# Fitting Random Forest to the train dataset
tunegrid <- expand.grid(mtry = (1:3)) #Change to 1:84 if testing for real, 1:3 was used for model development
classifier_RF<-train(
factor(As3Cat) ~ .,
data = AsTrain,
metric = "Accuracy",
method = "rf",
trControl = trainControl(method="cv", number = 2),    #change number = 10 if doing for real
tuneGrid  = tunegrid,
ntree = 50,
verboseIter = TRUE  # Enable verbose output for troubleshooting
)
# Predicting the Test set results
y_pred = predict(classifier_RF, newdata = AsTest)
# Confusion Matrix
confusion_mtx = table(AsTest[,207], y_pred)
confusion_mtx
# Plotting model
plot(classifier_RF)
# Importance
#importance <- importance(classifier_RF)
#importance
# Calculate Accuracy
accuracy <- sum(diag(confusion_mtx)) / sum(confusion_mtx)
accuracy
# Calculate kappa value
kappa_value <- kappa(confusion_mtx)
kappa_value
#print values
classifier_RF
accuracy
kappa_value
importance <- varImp(classifier_RF, scale = FALSE)
# Plot variable importance
plot(importance, top = 20)
classifier_RF
classifier_RF$finalModel
classifier_RF$coefnames
classifier_RF$dots
#Clean up the workspace
rm(list=ls())
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
Asdata = read.csv("./CoPlateau_As/20240723_randomForest_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Clean up the workspace
rm(list=ls())
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
Asdata = read.csv("./CoPlateau_As/2_20240724_randomForest_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
getwd()
#Set working directory
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/01_data/CoPlateau_As")
#Clean up the workspace
rm(list=ls())
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
Asdata = read.csv("./CoPlateau_As/2_20240724_randomForest_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Load data
Asdata = read.csv("./2_20240724_randomForest_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
Asdata <- Asdata[complete.cases(Asdata), ]
#Subset to training set
AsTrain<-subset(Asdata, trainCat3==TRUE)
#Ensure As3Cat is a Factor (Categorical Variable)
AsTrain$As3Cat <- as.factor(AsTrain$As3Cat)
#Drop unused fields
AsTrain<-AsTrain[,-c(1:6,213:215, 217)]
# Fitting Random Forest to the train dataset
#classifier_RF
Arsenic_boost <- train(
As3Cat ~ .,  # Specify the target variable as As3Cat
data = AsTrain,
method = "gbm",
trControl = trainControl(
method = "cv",
number = 1,    #Use 10 fold for real runs
verboseIter = TRUE  # Enable verbose output for troubleshooting
),
tuneGrid = expand.grid(
"n.trees" = seq(from = 100, to = 500, by = 10),  #from USGS paper, might want to scale down for our work here
"interaction.depth" = seq(from = 2, to = 16, by = 2),  #adapted from USGS paper, might want to scale down for our work here
"shrinkage" = seq(from = 0.004, to = 0.012, by = 0.002),  #adapted from USGS paper, might want to scale down for our work here
"n.minobsinnode" = 8) #from USGS paper, might want to scale down for our work here
)
warnings()
# Fitting Random Forest to the train dataset
#classifier_RF
Arsenic_boost <- train(
As3Cat ~ .,  # Specify the target variable as As3Cat
data = AsTrain,
method = "gbm",
trControl = trainControl(
method = "cv",
number = 2,    #Use 10 fold for real runs
verboseIter = TRUE  # Enable verbose output for troubleshooting
),
tuneGrid = expand.grid(
"n.trees" = seq(from = 100, to = 500, by = 10),  #from USGS paper, might want to scale down for our work here
"interaction.depth" = seq(from = 2, to = 16, by = 2),  #adapted from USGS paper, might want to scale down for our work here
"shrinkage" = seq(from = 0.004, to = 0.012, by = 0.002),  #adapted from USGS paper, might want to scale down for our work here
"n.minobsinnode" = 8) #from USGS paper, might want to scale down for our work here
)
warnings()
version
View(Asdata)
?verboseIter
?train
library(caTools)
library(caret)
library(gbm)
library(xgboost) # for xgboost
library(tidyverse) # general utility functions
#library(smotefamily) #use to balance the training dataset
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/01_data")
#setwd("/Users/austinmartinez/Documents/GitHub/coPlateauWaterQuality/01_data")
#Clean up the workspace
rm(list=ls())
#Set some basic parameters
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
Asdata = read.csv("./CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Subset to training set
AsTrain<-subset(Asdata, trainCat3==TRUE)
#Drop unused fields for bas1 outcome
AsTrain<-AsTrain[,-c(1:6,214:217)]
View(Asdata)
#Ensure bas1 is a Factor (Categorical Variable)
AsTrain$bas1 <- as.factor(AsTrain$bas1)
View(AsTrain)
library(caTools)
library(caret)
library(gbm)
library(xgboost) # for xgboost
library(tidyverse) # general utility functions
#library(smotefamily) #use to balance the training dataset
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/01_data")
#setwd("/Users/austinmartinez/Documents/GitHub/coPlateauWaterQuality/01_data")
#Clean up the workspace
rm(list=ls())
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load RF model
Arsenic_xgb<-readRDS("../03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/")
#Clean up the workspace
rm(list=ls())
#Load RF model
Arsenic_xgb<-readRDS("../03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load RF model
Arsenic_xgb<-readRDS("03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load RF model
Arsenic_xgb<-readRDS("/03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
getwd
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/")
getwd()
#Load RF model
Arsenic_xgb<-readRDS("/03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load data
Asdata = read.csv("./CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Load data
Asdata = read.csv(".01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Subset to test set
AsTest<-subset(Asdata, trainCat3==FALSE)
#Drop unused fields
Asdata<-Asdata[,-c(1:6,214:217)]
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest)
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
View(Asdata)
#Drop unused fields
Asdata<-Asdata[,-c(1:6,213:214, 216:217)]
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest)
confusionMatrix(y_pred, factor(AsTest[,216]))
y_pred
#Clean up the workspace
rm(list=ls())
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Subset to test set
AsTest<-subset(Asdata, trainCat3==FALSE)
#Drop unused fields
Asdata<-Asdata[,-c(1:6,213:214,216:217)]
#Drop unused fields
AsTest<-AsTest[,-c(1:6,213:214,216:217)]
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest)
confusionMatrix(y_pred, factor(AsTest[,207]))
length(y_pred)
length(AsTest)
View(AsTest)
#Clean up the workspace
rm(list=ls())
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
View(Asdata)
#Subset to test set
AsTest<-subset(Asdata, trainCat3==FALSE)
#Drop unused fields
AsTest<-AsTest[,-c(1:6,213:214,216:217)]
View(AsTest)
?predict
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest)
confusionMatrix(y_pred, factor(AsTest[,207]))
Arsenic_xgb
library(caTools)
library(randomForest)
library(caret)
library(tidyverse)
#Set working directory
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/01_data")
#Clean up the workspace
rm(list=ls())
#Load RF model
classifier_RF<-readRDS("../03_modelOutputs/01_randomForest/2024-07-24mtry2_cv3_final_model_rf.rds")
#Set working directory
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality")
#Load RF model
classifier_RF<-readRDS("/03_modelOutputs/01_randomForest/2024-07-24mtry2_cv3_final_model_rf.rds")
#Load RF model
classifier_RF<-readRDS("./03_modelOutputs/01_randomForest/2024-07-24mtry2_cv3_final_model_rf.rds")
#Load RF model
classifier_RF<-readRDS("./03_modelOutputs/01_randomForest/2024-07-25_rf.rds")
#Load data
Asdata = read.csv("./CoPlateau_As/20240723_randomForest_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240723_randomForest_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
Asdata <- Asdata[complete.cases(Asdata), ]
#Subset to test set
AsTest<-subset(Asdata, trainCat3==FALSE)
# Predicting the Test set results
y_pred = predict(classifier_RF, newdata = AsTest[,-c(1:6,213:215, 217)])
classifier_RF
?predict
# Predicting the Test set results
y_pred = predict(classifier_RF, newdata = AsTest[,-c(1:6,213:215, 217)], type="prob")
View(y_pred)
#Clean up the workspace
rm(list=ls())
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Subset to test set
AsTest<-subset(Asdata, trainCat3==FALSE)
#Drop unused fields
AsTest<-AsTest[,-c(1:6,213:214,216:217)]
View(AsTest)
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest[,207])
Arsenic_xgb
Arsenic_xgb$modelInfo$predictors()
#Drop unused fields
AsTest<-AsTest[,-c(1:7,213:214,216:217)]
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest[,207])
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest[,206])
newdata = AsTest[,206]
#Drop unused fields
AsTest<-AsTest[,-c(1:7,213:214,216:217)]
#Clean up the workspace
rm(list=ls())
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Subset to test set
AsTest<-subset(Asdata, trainCat3==FALSE)
#Drop unused fields
AsTest<-AsTest[,-c(1:7,213:214,216:217)]
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest[,206])
View(Asdata)
str(Arsenic_xgb$modelInfo$predictors())
?predict
#Clean up the workspace
rm(list=ls())
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Plot variable importance
# - Variable importance
plot(gbmImp, top=20)
#Calculate variable importance
gbmImp <- varImp(Arsenic_boost, scale=T)
gbmImp
# Plotting model
plot(Arsenic_xgb)
#Calculate variable importance
gbmImp <- varImp(Arsenic_xgb, scale=T)
gbmImp
str(Asdata)
#Plot variable importance
# - Variable importance
plot(gbmImp, top=20)
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest)
rm(list=ls())
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Subset to test set
AsTest<-subset(Asdata, trainCat3==FALSE)
#Drop unused fields
AsTest<-AsTest[,-c(1:7,213:214,216:217)]
View(AsTest)
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Subset to test set
AsTest<-subset(Asdata, trainCat3==FALSE)
#Drop unused fields
AsTest<-AsTest[,-c(1:6,213:214,216:217)]
View(AsTest)
AsTestbas10<-AsTest[,207]
AsTestbas10<-data.frame(AsTest[,207])
View(AsTestbas10)
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTestbas1)
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTestbas10)
#Clean up the workspace
rm(list=ls())
#Load RF model
Arsenic_xgb<-readRDS("./03_modelOutputs/03_xgb/2024-07-24_xgb_10ugL.rds")
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Subset to test set
AsTest<-subset(Asdata, trainCat3==FALSE)
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest[,-c(1:6,213:214,216:217)])
#Predictions
y_pred = predict(Arsenic_xgb, newdata = AsTest[,-c(1:6,213:214,216:217)], type="prob")
View(y_pred)
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality")
#setwd("/Users/austinmartinez/Documents/GitHub/coPlateauWaterQuality/01_data")
#Clean up the workspace
rm(list=ls())
#Set some basic parameters
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
Asdata = read.csv("./CoPlateau_As/2_20240724_randomForest_As_dataClean.csv",
na.strings = "NULL") #Probably need to simplify the path so the script and data are in the same folder for the HPC
library(caTools)
library(caret)
library(gbm)
library(xgboost) # for xgboost
library(tidyverse) # general utility functions
#library(smotefamily) #use to balance the training dataset
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality")
#setwd("/Users/austinmartinez/Documents/GitHub/coPlateauWaterQuality/01_data")
#Clean up the workspace
rm(list=ls())
#Set some basic parameters
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/Cleaned_As_GIS_Filtered.csv",
na.strings = "NULL") #Probably need to simplify the path so the script and data are in the same folder for the HPC
View(Asdata)
#Clean up the workspace
rm(list=ls())
#Set some basic parameters
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
Asdata = read.csv("./CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Load data
Asdata = read.csv("./CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/")
#Clean up the workspace
rm(list=ls())
#Set some basic parameters
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
View(Asdata)
#setwd("~/Desktop")
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/")
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/")
data = read.csv("As_GIS_Filtered.csv")
data = read.csv("./01_data/As_GIS_Filtered.csv")
data = read.csv("./01_data/CoPlateau_As/As_GIS_Filtered.csv")
data = read.csv("./01_data/CoPlateau_As/Cleaned_As_GIS_Filtered.csv")
View(data)
View(data)
#Load data
#Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
#                  na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
Asdata = read.csv("./01_data/CoPlateau_As/Cleaned_As_GIS_Filtered.csv",
na.strings = "NULL")
View(data)
rm(list=ls())
#Set some basic parameters
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
#Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
#                  na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
Asdata = read.csv("./01_data/CoPlateau_As/Cleaned_As_GIS_Filtered.csv",
na.strings = "NULL")
View(Asdata)
#split into training (70%) and testing set (30%), keep traing set balances with overall distribution
sample_set<-sample.split(Asdata2$As3Cat, SplitRatio = 0.7)
View(Asdata)
#split into training (70%) and testing set (30%), keep traing set balances with overall distribution
sample_set<-sample.split(Asdata$As3Cat, SplitRatio = 0.7)
Asdata2 <- Asdata %>%
mutate(
trainCat3 = ifelse(sample_set == TRUE, 1, 0)
)
View(Asdata2)
factor(Asdata$spl3cat)
summary(factor(Asdata$spl3cat))
#Load data
#Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
#                  na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
Asdata = read.csv("./01_data/CoPlateau_As/Cleaned_As_GIS_Filtered.csv",
na.strings = "NULL")
#Subset to training set
AsTrain<-subset(Asdata, trainCat3==TRUE)
#Subset to training set
AsTrain<-subset(Asdata, splCat3==TRUE)
#Subset to training set
AsTrain<-subset(Asdata, spl3cat==TRUE)
View(AsTrain)
#Drop unused fields for bas1 outcome
AsTrain<-AsTrain[,-c(1:5,212:214, 216:217)]
View(AsTrain)
View(Asdata)
outcomeM<-"As3Cat"
#Clean up the workspace
rm(list=ls())
#Set some basic parameters
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
#Subset to training set
AsTrain<-subset(Asdata, spl3cat==TRUE)
View(Asdata)
#Drop unused fields for bas1 outcome
AsTrain<-AsTrain[,-c(1:5,213:215, 217)]
View(Asdata)
#Subset to training set
AsTrain<-subset(Asdata, trainCat3==TRUE)
#Drop unused fields for bas1 outcome
AsTrain<-AsTrain[,-c(1:5,213:215, 217)]
View(AsTrain)
Asdata = read.csv("./01_data/CoPlateau_As/Cleaned_As_GIS_Filtered.csv",
na.strings = "NULL")
View(Asdata)
rm(list=ls())
#Set some basic parameters
date<-Sys.Date()
set.seed(1234)  # Setting seed
#Load data
#Asdata = read.csv("./01_data/CoPlateau_As/20240724_xgb_As_dataClean.csv",
#                  na.strings = "NA") #Probably need to simplify the path so the script and data are in the same folder for the HPC
Asdata = read.csv("./01_data/CoPlateau_As/Cleaned_As_GIS_Filtered.csv",
na.strings = "NULL")
AsTrain<-subset(Asdata, spl3cat==TRUE)
View(AsTrain)
#Drop unused fields for bas1 outcome
AsTrain<-AsTrain[,-c(1:5,212:214, 216,217)]
View(AsTrain)
