library(caTools)
library(caret)
library(gbm)
library(xgboost) # for xgboost
library(tidyverse) # general utility functions
library(smotefamily) #use to balance the training dataset
setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/01_data")
#Clean up the workspace
rm(list=ls())
#Load data
All_Asdata = read.csv("AsModelInput.csv")
# set a random seed & shuffle data frame
set.seed(1234)
Asdata <- All_Asdata[sample(1:nrow(All_Asdata)), ]
# get the numb 70/30 training test split
#split into training (70%) and testing set (30%)
sample_set<-sample(nrow(Asdata), round(nrow(Asdata)*.7), replace = F)
As_train = Asdata[sample_set,]
As_test = Asdata[-sample_set,]
#Complete cases
As_trainComp <- As_train[complete.cases(As_train[,c(2,3,9:93)]),]  #col 2,3, testing on As >5/10 ug/L category
As_testComp<- As_test[complete.cases(As_test[,c(2,3,9:93)]),] #col 2,3, testing on As >5/10 ug/L category
As_trainComp <- As_trainComp[,c(2,3,9:93)] #col 2,3, testing on As >5/10 ug/L category
As_testComp<- As_testComp[,c(2,3,9:93)] #col 2,3, testing on As >5/10 ug/L category
#define predictor and response variables in training set
train_x<-data.matrix(As_trainComp[, -c(1:8)])
train_y<-As_trainComp[,2,3]
#define predictor and response variables in testing set
test_x<-data.matrix(As_testComp[, -c(1:8)])
test_y<-As_testComp[,2,3]
View(All_Asdata)
View(All_Asdata)
