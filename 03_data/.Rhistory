library(caTools)
#library(randomForest)
library(gbm)
library(xgboost) # for xgboost
library(caret)
#install.packages("cutpointr") #install only once then comment out
library(cutpointr)
#setwd("/Users/hoover/Documents/GitHub/coPlateauWaterQuality/03_data/")
setwd("/Users/aaronnuanez/Documents/GitHub/coPlateauWaterQuality/03_data")
rm(list=ls())
#Load data
Asdata <- read.csv("All_As_Data.csv")
#Load XGB model
#Arsenic_xgb<-readRDS("./XGB_rds/2024-12-08_ClassLTE1_cv10_xgb.rds")
#Arsenic_xgb<-readRDS("./XGB_rds/2024-12-04_ClassLTE2_cv10_xgb.rds")
#Arsenic_xgb<-readRDS("./XGB_rds/2024-12-05_ClassLTE3_cv10_xgb.rds")
#Arsenic_xgb<-readRDS("./XGB_rds/2024-12-05_ClassLTE5_cv10_xgb.rds")
Arsenic_xgb<-readRDS("./XGB_rds/2024-12-08_ClassLTE10_cv10_xgb.rds")
Arsenic_xgb
#Make SiteID the row name so we can drop that field
rownames(train)<-train$SiteID
# Filter data into train and test sets based on logical variable 'trainCat2'
#train <- Asdata[Asdata$trainClassLTE2_splt == TRUE, ] #Need up update this field and dataframe to match what is produce in lines 21-24
#test <- Asdata[Asdata$trainClassLTE1_splt == FALSE, ] #Need up update this field and dataframe to match what is produce in lines 21-24
#test <- Asdata[Asdata$trainClassLTE2_splt == FALSE, ] #Need up update this field and dataframe to match what is produce in lines 21-24
#test <- Asdata[Asdata$trainClassLTE3_splt == FALSE, ] #Need up update this field and dataframe to match what is produce in lines 21-24
#test <- Asdata[Asdata$trainClassLTE5_splt == FALSE, ] #Need up update this field and dataframe to match what is produce in lines 21-24
test <- Asdata[Asdata$trainClassLTE10_splt == FALSE, ] #Need up update this field and dataframe to match what is produce in lines 21-24
#Make SiteID the row name so we can drop that field
#rownames(train)<-train$SiteID
rownames(test)<-test$SiteID
#Drop unused fields
#AsTrain<-train[,-c(1, 4, 109:112, 157, 159:168)] #Drop the As concentration, and the categorical variables we already transformed
#AsTest<-test[,-c(1, 4, 109:112, 157:160, 162:168)] #for use with LTE1
#AsTest<-test[,-c(1, 4, 109:112, 157,159:168)] #for use with LTE2
#AsTest<-test[,-c(1, 4, 109:112, 157:158, 160:168)] #for use with LTE3
#AsTest<-test[,-c(1, 4, 109:112, 157:159, 161:168)] #for use with LTE5
AsTest<-test[,-c(1, 4, 109:112, 157:160, 162:168)] #for use with LTE10
#Ensure ClassLTE2 is a Factor (Categorical Variable)
#AsTest$ClassLTE2 <- as.factor(AsTest$ClassLTE2)
#AsTest$ClassLTE3 <- as.factor(AsTest$ClassLTE3)
#AsTest$ClassLTE5 <- as.factor(AsTest$ClassLTE5)
AsTest$ClassLTE10  <- as.factor(AsTest$ClassLTE10)
# Predicting the Test set results
#Predictions
y_pred = predict(Arsenic_xgb, newdata = test[,-1], type="prob")
colnames(y_predJoin)[2]<-"PrednoExceed"
